{"ast":null,"code":"var _jsxFileName = \"/Users/darrenjiang/Desktop/hw3_sample_solution1/src/test/DatabaseTester.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport WireframeJson from './WireframeData.json';\nimport { getFirestore } from 'redux-firestore';\n\nclass DatabaseTester extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClear = () => {\n      const fireStore = getFirestore();\n      fireStore.collection('Wireframes').get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          console.log(\"deleting \" + doc.id);\n          fireStore.collection('Wireframes').doc(doc.id).delete();\n        });\n      });\n    };\n\n    this.handleReset = () => {\n      const fireStore = getFirestore();\n      WireframeJson.Wireframes.forEach(WireframeJson => {\n        fireStore.collection('Wireframes').add({\n          title: WireframeJson.name,\n          email: WireframeJson.email,\n          height: WireframeJson.height,\n          width: WireframeJson.width,\n          key: WireframeJason.key\n        }).then(() => {\n          console.log(\"DATABASE RESET\");\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Clear Database\"), React.createElement(\"button\", {\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Reset Database\"));\n  }\n\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    auth: state.firebase.auth,\n    firebase: state.firebase\n  };\n};\n\nexport default connect(mapStateToProps)(DatabaseTester);","map":{"version":3,"sources":["/Users/darrenjiang/Desktop/hw3_sample_solution1/src/test/DatabaseTester.js"],"names":["React","connect","WireframeJson","getFirestore","DatabaseTester","Component","handleClear","fireStore","collection","get","then","querySnapshot","forEach","doc","console","log","id","delete","handleReset","Wireframes","add","title","name","email","height","width","key","WireframeJason","catch","err","render","mapStateToProps","state","auth","firebase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAKzCC,WALyC,GAK3B,MAAM;AAChB,YAAMC,SAAS,GAAGJ,YAAY,EAA9B;AACAI,MAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCC,GAAnC,GAAyCC,IAAzC,CAA8C,UAASC,aAAT,EAAuB;AACjEA,QAAAA,aAAa,CAACC,OAAd,CAAsB,UAASC,GAAT,EAAc;AAChCC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAcF,GAAG,CAACG,EAA9B;AACAT,UAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCK,GAAnC,CAAuCA,GAAG,CAACG,EAA3C,EAA+CC,MAA/C;AACH,SAHD;AAIH,OALD;AAMH,KAbwC;;AAAA,SAezCC,WAfyC,GAe3B,MAAM;AAChB,YAAMX,SAAS,GAAGJ,YAAY,EAA9B;AACAD,MAAAA,aAAa,CAACiB,UAAd,CAAyBP,OAAzB,CAAiCV,aAAa,IAAI;AAC9CK,QAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCY,GAAnC,CAAuC;AAC/BC,UAAAA,KAAK,EAAEnB,aAAa,CAACoB,IADU;AAE/BC,UAAAA,KAAK,EAAErB,aAAa,CAACqB,KAFU;AAG/BC,UAAAA,MAAM,EAAEtB,aAAa,CAACsB,MAHS;AAI/BC,UAAAA,KAAK,EAAEvB,aAAa,CAACuB,KAJU;AAK/BC,UAAAA,GAAG,EAAEC,cAAc,CAACD;AALW,SAAvC,EAMOhB,IANP,CAMY,MAAM;AACVI,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,SARL,EAQOa,KARP,CAQcC,GAAD,IAAS;AACdf,UAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACH,SAVL;AAWH,OAZD;AAaH,KA9BwC;AAAA;;AAgCzCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKxB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKY,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CADJ;AAKH;;AAtCwC;;AAyC7C,MAAMa,eAAe,GAAG,UAAUC,KAAV,EAAiB;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACE,QAAN,CAAeD,IADlB;AAEHC,IAAAA,QAAQ,EAAEF,KAAK,CAACE;AAFb,GAAP;AAIH,CALD;;AAOA,eAAejC,OAAO,CAAC8B,eAAD,CAAP,CAAyB3B,cAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport WireframeJson from './WireframeData.json'\nimport { getFirestore } from 'redux-firestore';\n\nclass DatabaseTester extends React.Component {\n\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\n    // TO LOG IN\n    handleClear = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('Wireframes').get().then(function(querySnapshot){\n            querySnapshot.forEach(function(doc) {\n                console.log(\"deleting \" + doc.id);\n                fireStore.collection('Wireframes').doc(doc.id).delete();\n            })\n        });\n    }\n\n    handleReset = () => {\n        const fireStore = getFirestore();\n        WireframeJson.Wireframes.forEach(WireframeJson => {\n            fireStore.collection('Wireframes').add({\n                    title: WireframeJson.name,\n                    email: WireframeJson.email,\n                    height: WireframeJson.height,\n                    width: WireframeJson.width,\n                    key: WireframeJason.key\n                }).then(() => {\n                    console.log(\"DATABASE RESET\");\n                }).catch((err) => {\n                    console.log(err);\n                });\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleClear}>Clear Database</button>\n                <button onClick={this.handleReset}>Reset Database</button>\n            </div>)\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        auth: state.firebase.auth,\n        firebase: state.firebase\n    };\n}\n\nexport default connect(mapStateToProps)(DatabaseTester);"]},"metadata":{},"sourceType":"module"}